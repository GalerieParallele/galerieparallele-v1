version: '3.4'

networks:
  web:
    external: true
  internal:
    external: false

services:

  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=devneosianexus@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - web

  app:
    image: galerieparallele
    build:
      context: .
      dockerfile: Dockerfile
      target: deploy
    command: sh -c "npx prisma migrate deploy && npm start"
    labels:
      - "traefik.http.routers.myapp.rule=Host(`galerieparallele.com`)"
      - "traefik.http.routers.myapp.entrypoints=websecure"
      - "traefik.http.routers.myapp.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.myapp-http.rule=Host(`galerieparallele.com`)"
      - "traefik.http.routers.myapp-http.entrypoints=web"
      - "traefik.http.routers.myapp-http.middlewares=redirect-https"
    environment:
      - DATABASE_URL=postgres://user:${POSTGRES_PASSWORD}@db:5432/gp_database
    depends_on:
      - db
    networks:
      - web
      - internal

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: gp_database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - internal

volumes:
  db_data: